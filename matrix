import mysql.connector
import json

def get_atp_matrix_from_db():
    # Initialize the matrix list
    atp_matrix = None
    
    try:
        # Database connection parameters
        db_config = {
            'host': 'localhost',  # Change to your MySQL host
            'user': 'username',   # Change to your MySQL username
            'password': 'password', # Change to your MySQL password
            'database': 'your_database' # Change to your database name
        }
        
        # Establish connection to MySQL
        conn = mysql.connector.connect(**db_config)
        cursor = conn.cursor()
        
        # Query to fetch a single row containing the ATP matrix
        # Adjust the table name and column names according to your database schema
        query = """
        SELECT matrix_data 
        FROM atp_matrices 
        WHERE matrix_id = 1
        LIMIT 1
        """
        
        # Execute the query
        cursor.execute(query)
        
        # Fetch the single row
        result = cursor.fetchone()
        
        if result:
            # Assuming the matrix is stored as a JSON string in the database
            # Parse it into a Python list
            matrix_json = result[0]
            atp_matrix = json.loads(matrix_json)
            print("Successfully loaded ATP matrix from database")
        else:
            print("No matrix found in the database")
        
        # Close database connection
        cursor.close()
        conn.close()
        
    except mysql.connector.Error as err:
        print(f"Database error: {err}")
    except Exception as e:
        print(f"Error: {e}")
    
    return atp_matrix

def verify_matrix(matrix):
    """
    Simple verification of the matrix structure
    """
    if not matrix:
        print("Matrix is empty or None")
        return False
    
    try:
        # Verify the matrix has the expected structure
        # This will depend on your specific matrix format
        if isinstance(matrix, list) and len(matrix) > 0:
            print(f"Matrix is a list with {len(matrix)} rows")
            
            # Print first row as sample
            print("First row sample:")
            print(matrix[0])
            
            return True
        else:
            print("Matrix does not have the expected structure")
            return False
    except Exception as e:
        print(f"Error verifying matrix: {e}")
        return False

if __name__ == "__main__":
    # Get the matrix from the database
    atp_matrix = get_atp_matrix_from_db()
    
    # Verify the matrix
    is_valid = verify_matrix(atp_matrix)
    
    if is_valid:
        print("Matrix is valid and ready for use")
    else:
        print("Matrix validation failed")
