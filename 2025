import json
import pandas as pd
from typing import List, Dict

def json_lines_to_csv(input_file: str, output_file: str, flatten: bool = True) -> None:
    """
    Convert a text file containing JSON objects (one per line) to a CSV file.
    
    Args:
        input_file (str): Path to the input text file containing JSON lines
        output_file (str): Path where the CSV file will be saved
        flatten (bool): If True, flatten nested JSON structures
    """
    # Read JSON objects from file
    json_list: List[Dict] = []
    
    try:
        with open(input_file, 'r') as file:
            for line in file:
                try:
                    # Parse each line as a JSON object
                    json_obj = json.loads(line.strip())
                    json_list.append(json_obj)
                except json.JSONDecodeError as e:
                    print(f"Error parsing JSON line: {line.strip()}")
                    print(f"Error message: {str(e)}")
                    continue
        
        if not json_list:
            raise ValueError("No valid JSON objects found in the file")
        
        # Convert list of JSON objects to pandas DataFrame
        df = pd.DataFrame(json_list)
        
        if flatten:
            # Flatten nested structures if any exist
            df = pd.json_normalize(json_list)
        
        # Save to CSV
        df.to_csv(output_file, index=False)
        print(f"Successfully converted {len(json_list)} JSON objects to CSV")
        print(f"CSV file saved as: {output_file}")
        
        # Display first few rows and data info
        print("\nFirst few rows of the CSV:")
        print(df.head())
        print("\nDataset Info:")
        print(df.info())
        
    except FileNotFoundError:
        print(f"Error: Input file '{input_file}' not found")
    except Exception as e:
        print(f"An error occurred: {str(e)}")

# Example usage
if __name__ == "__main__":
    # Example of how the input file should look:
    sample_data = '''
    {"name": "John", "age": 30, "city": "New York"}
    {"name": "Alice", "age": 25, "city": "Los Angeles"}
    {"name": "Bob", "age": 35, "city": "Chicago"}
    '''.strip()
    
    # Create a sample input file
    with open('sample_input.txt', 'w') as f:
        f.write(sample_data)
    
    # Convert to CSV
    json_lines_to_csv('sample_input.txt', 'output.csv')
