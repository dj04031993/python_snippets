
import pandas as pd

# Assuming prod_df and qa_df are already loaded
# Step 1: Create a function to search and filter the QA dataframe based on the production combo

def filter_qa_based_on_prod(prod_dataframe, qa_dataframe):
    # Create an empty list to store the matching rows
    matching_records = []
    
    # Iterate through each row in the production dataframe
    for _, prod_row in prod_dataframe.iterrows():
        # Extract the combo values from production
        system = prod_row['cu_system']
        prin = prod_row['cu_prin']
        agent = prod_row['cu_agent']
        
        # Find matching rows in QA dataframe
        # Note: Column names differ between dataframes
        matches = qa_dataframe[
            (qa_dataframe['SYS NUM'] == system) & 
            (qa_dataframe['PRIN NUM'] == prin) & 
            (qa_dataframe['AGENT_NUMBER'] == agent)
        ]
        
        # If matches found, add to our results list
        if not matches.empty:
            for _, match_row in matches.iterrows():
                matching_records.append({
                    'prod_client_group': prod_row['client group'],
                    'prod_sub_client': prod_row['sub_client_name'],
                    'prod_system': prod_row['cu_system'],
                    'prod_prin': prod_row['cu_prin'],
                    'prod_agent': prod_row['cu_agent'],
                    'qa_client_name': match_row['CLIENT NAME'],
                    'qa_sub_client': match_row['SUB CLIENT_NAME'],
                    'qa_system': match_row['SYS NUM'],
                    'qa_prin': match_row['PRIN NUM'],
                    'qa_agent': match_row['AGENT_NUMBER'],
                    'qa_client_group': match_row['Client Group']
                })
    
    # Convert the list of matches to a dataframe
    result_df = pd.DataFrame(matching_records) if matching_records else pd.DataFrame()
    return result_df

# Use the function to get matching records
result = filter_qa_based_on_prod(prod_df, qa_df)

# Display the results
print(f"Found {len(result)} matching records")
print(result.head())
