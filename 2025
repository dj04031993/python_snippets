import pandas as pd
import re

# First try to install xlsxwriter if it's not already installed
try:
    import xlsxwriter
except ImportError:
    print("Installing xlsxwriter package...")
    import subprocess
    subprocess.check_call(["pip", "install", "xlsxwriter"])
    import xlsxwriter
    print("xlsxwriter installed successfully")

# Assuming your DataFrame is named 'df'
# 1) Extract unique client groups
client_list = df['client_group'].unique().tolist()

# Create a Pandas Excel writer
excel_writer = pd.ExcelWriter('client_combinations.xlsx', engine='xlsxwriter')

# Track sheet names to avoid duplicates
used_sheet_names = set()

# 2 & 3) For each client in the list, get combinations and save to worksheet
print("Client Details:")
print("-" * 50)

for client in client_list:
    # Filter DataFrame for current client
    client_df = df[df['client_group'] == client]
    
    # Get the combinations of the specified columns
    client_combinations = client_df[['CLIENT_NUMBER', 'SYS_NUM', 'PRIN_NUM', 'AGENT_NUMBER']].drop_duplicates()
    
    # Count number of unique combinations
    num_combinations = len(client_combinations)
    
    # Clean the client name for Excel worksheet name
    # Excel worksheet names limited to 31 chars and can't contain: \ / * ? [ ] : 
    sheet_name = str(client)[:31]  # Limit to 31 chars
    
    # Replace invalid characters with underscore
    sheet_name = re.sub(r'[\\/\*\?\[\]\:]', '_', sheet_name)
    
    # Handle duplicate sheet names by adding a suffix
    original_sheet_name = sheet_name
    suffix = 1
    
    while sheet_name in used_sheet_names:
        # Truncate if needed to make room for the suffix
        base_name = original_sheet_name[:28]  # Leave room for _XX suffix
        sheet_name = f"{base_name}_{suffix}"
        suffix += 1
    
    # Add to the set of used names
    used_sheet_names.add(sheet_name)
    
    # Write to Excel
    client_combinations.to_excel(excel_writer, sheet_name=sheet_name, index=False)
    
    # Print client info with row count
    print(f"Client: {client}")
    print(f"Sheet name: {sheet_name}")
    print(f"Number of unique combinations: {num_combinations}")
    print("-" * 50)

# Save the Excel file
excel_writer.close()

print(f"Excel file created with {len(client_list)} worksheets, one for each client group")
